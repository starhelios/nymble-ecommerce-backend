"""Schema Updates

Revision ID: 90a9961bc847
Revises: 8acce1eda07d
Create Date: 2024-01-05 18:01:36.439245

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "90a9961bc847"
down_revision: Union[str, None] = "8acce1eda07d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "order_items", "order_id", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "order_items", "product_id", existing_type=sa.VARCHAR(), nullable=False
    )
    op.create_unique_constraint(None, "order_items", ["product_id"])
    op.create_unique_constraint(None, "order_items", ["order_id"])
    op.alter_column("orders", "customer_id", existing_type=sa.VARCHAR(), nullable=False)
    op.create_unique_constraint(None, "orders", ["customer_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "orders", type_="unique")
    op.alter_column("orders", "customer_id", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint(None, "order_items", type_="unique")
    op.drop_constraint(None, "order_items", type_="unique")
    op.alter_column(
        "order_items", "product_id", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "order_items", "order_id", existing_type=sa.VARCHAR(), nullable=True
    )
    # ### end Alembic commands ###
